{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { NgbButtonsModule, NgbModalModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StoreModule } from '@ngrx/store';\nimport { playersReducer } from './store/players/players.reducer';\nimport { PlayersSelectionComponent } from './players-selection/players-selection.component';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './app.router';\nimport { EffectsModule } from '@ngrx/effects';\nimport { PlayersEffect } from './store/players/players.effect';\nimport { PlayersApiService } from './services/players-api.service';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { CurrentMatchComponent } from './current-match/current-match.component';\nimport { machesReducer } from './store/matches/matches.reducer';\nimport { MatchesApiService } from './services/matches-api.service';\nimport { MatchesEffect } from './store/matches/maches.effect';\nimport { ScoreboardComponent } from './scoreboard/scoreboard.component';\nimport { SpoudAvatarComponent } from './spoud-avatar/spoud-avatar.component';\nimport { ScoreConfirmationModalComponent } from './score-confirmation-modal/score-confirmation-modal.component';\nimport { localStorageSync } from 'ngrx-store-localstorage';\nimport { EventApiService } from './services/event-api.service';\nimport { LastMatchesComponent } from './scoreboard/last-matches/last-matches.component';\nimport { PlayersScoreboardComponent } from './scoreboard/players-scoreboard/players-scoreboard.component';\nimport { LastMatchTimePipe } from './scoreboard/players-scoreboard/last-match-time.pipe';\nconst reducers = {\n  players: playersReducer,\n  matches: machesReducer\n};\nexport function localStorageSyncReducer(reducer) {\n  if (environment.production || true) {\n    return reducer;\n  }\n  return localStorageSync({\n    keys: ['players', 'matches'],\n    rehydrate: true\n  })(reducer);\n}\nconst metaReducers = [localStorageSyncReducer];\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent, PlayersSelectionComponent, CurrentMatchComponent, ScoreboardComponent, SpoudAvatarComponent, ScoreConfirmationModalComponent, LastMatchesComponent, PlayersScoreboardComponent, LastMatchTimePipe],\n  imports: [BrowserModule, HttpClientModule, RouterModule.forRoot(ROUTES), NgbModule, NgbButtonsModule, NgbModalModule, StoreModule.forRoot(reducers, {\n    metaReducers\n  }), EffectsModule.forRoot([PlayersEffect, MatchesEffect]), StoreDevtoolsModule.instrument({\n    maxAge: 25,\n    // Retains last 25 states\n    logOnly: environment.production // Restrict extension to log-only mode\n  })],\n  providers: [EventApiService, PlayersApiService, MatchesApiService],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}