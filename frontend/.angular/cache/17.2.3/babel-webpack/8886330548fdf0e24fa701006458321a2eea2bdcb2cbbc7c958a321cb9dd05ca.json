{"ast":null,"code":"import { ReplaySubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let EventApiService = /*#__PURE__*/(() => {\n  class EventApiService {\n    constructor(zone) {\n      this.zone = zone;\n      this.scoreChanges = this.createSSEObervable('/api/v1/sse/scores');\n      // this.newMatch = this.createSSEObervable('/api/v1/sse/matches');\n    }\n    // public matchStream(): Observable<MatchEO> {\n    // }\n    scoreChangeStream() {\n      return this.scoreChanges;\n    }\n    createSSEObervable(url) {\n      const subject = new ReplaySubject(1);\n      const eventSource = new EventSource(url);\n      eventSource.onmessage = event => this.zone.run(() => {\n        subject.next(JSON.parse(event.data));\n      });\n      eventSource.onerror = error => this.zone.run(() => {\n        subject.error(error);\n        debugger;\n      });\n      return subject;\n    }\n    static #_ = this.ɵfac = function EventApiService_Factory(t) {\n      return new (t || EventApiService)(i0.ɵɵinject(i0.NgZone));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: EventApiService,\n      factory: EventApiService.ɵfac\n    });\n  }\n  return EventApiService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}