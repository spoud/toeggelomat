{"ast":null,"code":"import { createEffect, ofType, ROOT_EFFECTS_INIT } from '@ngrx/effects';\nimport { EMPTY } from 'rxjs';\nimport { playersLoaded, playersReload } from './players.action';\nimport { catchError, debounceTime, map, mergeMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../../services/players-api.service\";\nimport * as i3 from \"../../services/event-api.service\";\nexport let PlayersEffect = /*#__PURE__*/(() => {\n  class PlayersEffect {\n    constructor(actions$, playerApiService, eventApiService) {\n      this.actions$ = actions$;\n      this.playerApiService = playerApiService;\n      this.eventApiService = eventApiService;\n      this.initPlayers = createEffect(() => this.actions$.pipe(ofType(ROOT_EFFECTS_INIT), map(() => playersReload())));\n      this.scoreStreams = createEffect(() => this.actions$.pipe(ofType(ROOT_EFFECTS_INIT), debounceTime(500), mergeMap(() => this.eventApiService.scoreChangeStream().pipe(map(() => playersReload())))));\n      this.loadPlayers$ = createEffect(() => this.actions$.pipe(ofType(playersReload), mergeMap(() => this.playerApiService.getAll().pipe(map(players => playersLoaded({\n        players\n      })), catchError(() => EMPTY)))));\n    }\n    static #_ = this.ɵfac = function PlayersEffect_Factory(t) {\n      return new (t || PlayersEffect)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.PlayersApiService), i0.ɵɵinject(i3.EventApiService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PlayersEffect,\n      factory: PlayersEffect.ɵfac\n    });\n  }\n  return PlayersEffect;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}