{"ast":null,"code":"import getNodeName from \"./getNodeName.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport { isShadowRoot } from \"./instanceOf.js\";\nexport default function getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n  return (\n    // this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot ||\n    // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || (\n    // DOM Element detected\n    isShadowRoot(element) ? element.host : null) ||\n    // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n  );\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}