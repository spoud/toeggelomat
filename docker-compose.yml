version: '3.7'
services:
  traefik:
    container_name: toeggelomat_traefik
    image: traefik:v2.0
    ports:
      - 81:80
      - 8181:8080
    volumes:
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock

  frontend:
    container_name: toeggelomat_frontend
    image: spoud/toeggelomat-frontend:kafka
    build: frontend/
    ports:
      - 82:80
    labels:
      - traefik.http.routers.toeggelomat_frontend.rule=PathPrefix(`/`)
      - traefik.http.services.toeggelomat_frontend-service.loadbalancer.server.port=80
      - traefik.enable=true

  backend:
    container_name: toeggelomat_backend
    image: spoud/toeggelomat-backend:kafka
    build: 
      context: backend/
      # dockerfile: src/main/docker/Dockerfile.jvm
      dockerfile: src/main/docker/Dockerfile.native
    ports:
      - 8080
    labels:
      - traefik.http.routers.toeggelomat_backend.rule=PathPrefix(`/api`)
      - traefik.http.services.toeggelomat_backend-service.loadbalancer.server.port=8080
      - traefik.enable=true

  kafka:
    container_name: toeggelomat_kafka
    image: johnnypark/kafka-zookeeper
    ports:
      - 2181:2181
      - 9092:9092
    environment:
      ADVERTISED_HOST: kafka

  ksqldb-server:
    image: confluentinc/ksqldb-server:0.10.0
    hostname: ksqldb-server
    container_name: toeggelomat_ksqldb-server
    volumes:
      - ./kafka/ksql:/etc/ksql/queries/
    depends_on: 
      - kafka
    ports:
      - "8088:8088"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: kafka:9092
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
      KSQL_KSQL_QUERIES_FILE: /etc/ksql/queries/player.sql

  ksqldb-cli:
    image: confluentinc/ksqldb-cli:0.10.0
    container_name: toeggelomat_ksqldb-cli
    depends_on:
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true
      
